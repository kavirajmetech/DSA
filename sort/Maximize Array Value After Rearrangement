

class Solution {
    public static void merge(int[] arr,int l,int m,int r){
        int n1=m-l+1;
        int n2=r-m;
        int[] ar1=new int[n1];
        int[] ar2=new int[n2];
        for(int i=0;i<n1;i++) ar1[i]=arr[i+l];
        for(int i=0;i<n2;i++) ar2[i]=arr[i+m+1];
        int i=0,j=0,k=l;
        while(i<n1 && j<n2){
            if(ar1[i]<ar2[j]){
                arr[k++]=ar1[i++];
            }else{
                arr[k++]=ar2[j++];
            }
        }
        while(i<n1) arr[k++]=ar1[i++];
        while(j<n2) arr[k++]=ar2[j++];
     }
    public static void sort(int[] arr,int l,int r){
        if(l<r){
            int m=l+(r-l)/2;
            
            sort(arr,l,m);
            sort(arr,m+1,r);
            
            merge(arr,l,m,r);
        }
    }
    int Maximize(int arr[]) {
        sort(arr,0,arr.length-1);
        long ans=0,mod=1000000007;
        for (int i=0;i<arr.length;i++){
            ans=(ans+(long)i*arr[i])%mod;
        }
        return (int)ans;
    }
}
